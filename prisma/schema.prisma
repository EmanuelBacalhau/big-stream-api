generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       Role     @default(USER)
  created_at DateTime @default(now()) @db.Date

  watch_times WatchTime[]

  @@map("users")
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  slug String @unique

  courses Course[]

  @@map("categories")
}

model Course {
  id             String   @id @default(uuid())
  title          String   @unique
  slug           String   @unique
  description    String
  cover_path     String
  thumbnail_path String
  category       Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id    String
  created_at     DateTime @default(now())

  episodes Episode[]

  @@map("courses")
}

model Episode {
  id         String   @id @default(uuid())
  title      String
  slug       String   @unique
  video      String
  order      Int
  time       Int
  course_id  String
  course     Course   @relation(fields: [course_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())

  watch_times WatchTime[]

  @@map("episodes")
}

model WatchTime {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  episode    Episode  @relation(fields: [episode_id], references: [id], onDelete: Cascade)
  episode_id String
  time       Int
  created_at DateTime @default(now())

  @@map("watch_times")
}
