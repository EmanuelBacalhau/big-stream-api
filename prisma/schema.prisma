generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       Role     @default(USER)
  created_at DateTime @default(now()) @db.Date

  favorite    Favorite[]
  watch_times WatchTime[]

  @@map("users")
}

model Category {
  id   String @id @default(uuid())
  name String @unique

  animes Anime[]

  @@map("categories")
}

model Anime {
  id             String   @id @default(uuid())
  title          String   @unique
  slug           String   @unique
  description    String
  cover_path     String
  thumbnail_path String
  category       Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id    String
  released_in    DateTime @db.Date

  seasons   Season[]
  favorites Favorite[]

  @@map("animes")
}

model Season {
  id       String @id @default(uuid())
  name     String
  anime    Anime  @relation(fields: [anime_id], references: [id], onDelete: Cascade)
  order    Int
  anime_id String

  episodes Episode[]

  @@map("seasons")
}

model Episode {
  id          String      @id @default(uuid())
  title       String
  video_path  String
  season      Season      @relation(fields: [season_id], references: [id], onDelete: Cascade)
  time        Int
  season_id   String
  created_at  DateTime    @default(now())
  watch_times WatchTime[]

  @@map("episodes")
}

model Favorite {
  id       String @id @default(uuid())
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id  String
  anime    Anime  @relation(fields: [anime_id], references: [id], onDelete: Cascade)
  anime_id String

  @@map("favorites")
}

model WatchTime {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  episode    Episode  @relation(fields: [episode_id], references: [id], onDelete: Cascade)
  episode_id String
  time       Int
  created_at DateTime @default(now())

  @@map("watch_times")
}
